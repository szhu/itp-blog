[{"insert":"BLE Week "},{"insert":"6\nFinal project"},{"attributes":{"header":1},"insert":"\n"},{"insert":"No-go ideas"},{"attributes":{"header":2},"insert":"\n"},{"insert":"I was really excited about the variety of voting applications that BLE could help make easier. However, as I explored each idea, I found the following issues:\nReal-time voting applications in rooms with many people (like classrooms, conferences) are not feasible, since most BLE peripheral devices don't allow simultaneous connections. Also, since these applications are low-security, there are not many advantages over using the Internet."},{"attributes":{"list":"bullet"},"insert":"\n"},{"insert":"To make a secure voting booth, fraud prevention would be required, but it would be hard. The range of Bluetooth is large enough that there would still need to be defenses against fraudulent voting. The most secure idea I could come up with is a two-booth solution, where the first booth outputs a cryptographically-signed \"ballot signature\" that the user receives. The user then walks to the second booth to submit a ballot with that signature. The act of walking from the first booth to the second can then be regulated using traditional means (security camera, physical barriers, etc.). This is a solution, which potentially feasible, both requires more security review and offers little advantage over paper ballots, so I decide to not go with this idea."},{"attributes":{"list":"bullet"},"insert":"\n"},{"insert":"Implementing a comment/message board would require a storage mechanism. The Arduino could be augmented with its own storage, a device with more onboard storage like a Raspberry Pi can be used, or submissions can immediately be sent to a computer or stored online. I opted to not build this for this class, as each potential solution would require significant build steps that aren't related to wireless technologies."},{"attributes":{"list":"bullet"},"insert":"\n"},{"insert":"With these in mind, I tried to find the most meaningful application that didn't have these constraints!"},{"insert":"\n"},{"insert":"Description"},{"attributes":{"header":2},"insert":"\n"},{"attributes":{"bold":true},"insert":"Read the Room"},{"insert":" is a room that marks the sentiment of a room based on its recent occupants. It is meant to be installed in common areas with no permanent occupants, like break rooms and lounges.\n"},{"insert":{"image":"https://static.slab.com/prod/uploads/xrfkaonr/posts/images/kaPC_bmBLK09Bu6uXRMZnwI_.jpg"}},{"insert":"Why: Sometimes the people who need the most support around us are the quietest. In spaces with many different people, small common areas tend to only serve those with the most energy. This is a simple device that allows occupants to sense the energy of those around them.\nTo use Read the Room, users use their phones to scan the QR code on the box, which takes them to an app (or website, once Bluetooth APIs for mobile web becomes available). Then, users would tap the sentiment (sad, meh, happy) that matches their current mood. The process is anonymous, and there is no mechanism to prevent users from submitting multiple votes; however, the device will only accept one vote every minute (and the app will indicate whether the device is currently accepting votes).\nOver time, the 3 LEDs on the device change to represent the relative occurrence of mood of the room. The device will discard older submissions, so the current reading will reflect only recent submissions. To preserve anonymity, the device wait for a random duration (1-10 minutes) before updating the reading to reflect the latest submission.\nRead the Room is a good application of BLE, as the entire set of interactions that we would like to allow only involve users within Bluetooth range. Compared to an online voting system, this solution is much more scalable. The only web component — the page the QR code links to — can be a static page and would be easy for people to host their own copies of. Moreover, the submitted data is not stored on the Internet, providing some inherent privacy.\n"},{"insert":{"attachment":[{"name":"Screen Recording 2021-03-18 at 9.51.40 PM.opt.mp4","size":2838302,"source":"https://static.slab.com/prod/uploads/xrfkaonr/posts/attachments/nVcXOHgfeYMELQ7kDunG4jTw.mp4"}]}},{"insert":{"image":"https://static.slab.com/prod/uploads/xrfkaonr/posts/images/uTTgMh9IVYbk3udkQVwa71Fz.png"}},{"insert":"Diagrams"},{"attributes":{"header":2},"insert":"\n"},{"attributes":{"caption":"System diagram."},"insert":{"image":"https://static.slab.com/prod/uploads/xrfkaonr/posts/images/qhEXeX2aswsgGtxDlmjw-p9V.jpg"}},{"attributes":{"caption":"Schematic of device.","span":"half","width":448.5},"insert":{"image":"https://static.slab.com/prod/uploads/xrfkaonr/posts/images/kSDbGpFGAWr4HucBR4Yemjp1.png"}},{"insert":"Bill of materials"},{"attributes":{"header":2},"insert":"\n"},{"insert":"Arduino Nano 33 IoT"},{"attributes":{"list":"bullet"},"insert":"\n"},{"insert":"3 LEDs"},{"attributes":{"list":"bullet"},"insert":"\n"},{"insert":"Enclosure"},{"attributes":{"list":"bullet"},"insert":"\n"},{"insert":"Printed Label"},{"attributes":{"list":"bullet"},"insert":"\n"},{"insert":"Battery pack or micro-usb cable + AC adapter"},{"attributes":{"list":"bullet"},"insert":"\n"},{"insert":"Wiring"},{"attributes":{"list":"bullet"},"insert":"\n"},{"insert":"Mounting hardware (e.g., Command hooks)"},{"attributes":{"list":"bullet"},"insert":"\n"},{"insert":"Handshake guide"},{"attributes":{"header":2},"insert":"\n"},{"insert":"The client should search for Bluetooth LE devices with service "},{"attributes":{"code":true},"insert":"e3099389-0215-400b-890e-a91262d6f618"},{"insert":" and connect to the first device found. There should only be one device."},{"attributes":{"list":"ordered"},"insert":"\n"},{"insert":"The client should write to integer characteristic "},{"attributes":{"code":true},"insert":"334c7536-1133-4f0e-a4d6-e3cf23f3c6b4."},{"insert":" The characteristic only supports writing. Allowed values: "},{"attributes":{"code":true},"insert":"1"},{"insert":" (sad) "},{"attributes":{"code":true},"insert":"2"},{"insert":" (meh) "},{"attributes":{"code":true},"insert":"3"},{"insert":" (happy)."},{"attributes":{"list":"ordered"},"insert":"\n"},{"insert":"That's it! Now the client can disconnect."},{"attributes":{"list":"ordered"},"insert":"\n"},{"insert":"Feedback"},{"attributes":{"header":2},"insert":"\n"},{"attributes":{"italic":true},"insert":"Two ways to persist data locally on Arduino: store to EEPROM (for small amounts of data), SD card module (for larger amounts of data)."},{"attributes":{"list":"bullet"},"insert":"\n"},{"attributes":{"italic":true},"insert":"Consider the encryption of BLE communications as well."},{"attributes":{"list":"bullet"},"insert":"\n"},{"attributes":{"italic":true},"insert":"The video prototype was good even though it doesn't involve a working device. The phone webapp should be similarly prototyped as well, even if technical limitations currently prevent such an app from being built. "},{"insert":"Update: I added a prototype!"},{"attributes":{"list":"bullet"},"insert":"\n"},{"attributes":{"italic":true},"insert":"Since the device is mounted to a fixed location, using Wi-Fi should be not too much of a hassle. In this case, a webapp would send responses to a server, where the sentiment is stored. The Arduino would only be responsible for periodically pulling the latest collective sentiment and displaying it. This setup technically violates the physical isolation of the system, but there is still a metaphor of this being an isolated system, so some of the benefits remain (like having this setup feel intuitive for first-time users)."},{"attributes":{"list":"bullet"},"insert":"\n"}]
